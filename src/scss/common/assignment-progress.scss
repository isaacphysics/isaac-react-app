@use "sass:math";

.assignment-progress-container {
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}

@include respond-below(sm) {
  .assignment-progress-container {
    margin: 0 -1px;
    padding: 0;
  }

  .assignment-progress-gameboard {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
}

.assignment-progress-group {
  border: 1px solid $gray-118;
  margin-top: 1rem !important;
  user-select: none;
  cursor: pointer;
  display: flex;
  align-items: stretch;
  background: white;
}

.assignment-progress-group > div {
  display: inline-block;
  flex: 0 0 auto;
  align-self: baseline;
  padding-right: 0.5rem;
}

.assignment-progress-group .group-name {
  background: $primary;
  align-self: stretch;
  display: flex;
  font-weight: bold;
  flex-shrink: 1;
  padding: 0.5rem 1.5rem;
  width: 300px;
  @include respond-above(sm) {
    font-size: 1.1rem;
  }
}
.assignment-progress-group .group-name span {
  margin: auto 0;
  & + span {
    padding-left: 1rem;
  }
}

.accordion-arrow {
  transform: rotate(180deg);
}

.active .accordion-arrow {
  transform: rotate(0deg);
}

.assignment-progress-details {
  background: $gray-107;
}

.single-assignment {
  background: none !important;
  margin-top: 0 !important;
  .progress-header {
    border-top: 1px solid $gray-118;
  }
}

.assignment-progress-legend {
  background: #fff;
  border: 1px solid $gray-118;
  padding: 1rem;
}


/*
    My progress styles
*/

// GENERIC
$status-opacity: 0.5;
$total-status-opacity: 0.5;
$default-name-fill: #888;

// COMPLETED
$perfect-fill: $green;
$completed-bg-img: linear-gradient(to right, rgba($perfect-fill, $status-opacity), rgba($perfect-fill, $status-opacity));
$completed-total-bg-img: linear-gradient(to right, rgba($perfect-fill, $total-status-opacity), rgba($perfect-fill, $total-status-opacity));
$completed-cb-bg-img: linear-gradient(
                to right, rgba($perfect-fill, $status-opacity), rgba($perfect-fill, $status-opacity));
$completed-bg-size: 100%;

// PASSED
$passed-fill: #2C2C2C;
$passed-bg-img: linear-gradient(to right, rgba($passed-fill, $status-opacity), rgba($passed-fill, $status-opacity));
$passed-total-bg-img: linear-gradient(to right, rgba($passed-fill, $total-status-opacity), rgba($passed-fill, $total-status-opacity));
$passed-cb-bg-img: linear-gradient(
                to bottom left, rgba($passed-fill, math.div($status-opacity, 1.5)) 25%,
                rgba($passed-fill, $status-opacity * 0.5) 25%, rgba($passed-fill, $status-opacity * 0.5) 50%,
                rgba($passed-fill, math.div($status-opacity, 1.5)) 50%, rgba($passed-fill, math.div($status-opacity, 1.5)) 75%,
                rgba($passed-fill, $status-opacity * 0.5) 75%, rgba($passed-fill, $status-opacity * 0.5));
$passed-bg-size: 50%;

// IN-PROGRESS
$in-progress-fill: #555;
$in-progress-bg-img: linear-gradient(to right, rgba($in-progress-fill, $status-opacity * 0.5), rgba($in-progress-fill, $status-opacity * 0.5));
$in-progress-total-bg-img: linear-gradient(to right, rgba($in-progress-fill, $total-status-opacity * 0.5), rgba($in-progress-fill, $total-status-opacity * 0.5));
$in-progress-cb-bg-img: linear-gradient(
                to bottom left, rgba($in-progress-fill, math.div($status-opacity, 1.5)) 25%,
                rgba($in-progress-fill, $status-opacity * 0.25) 25%, rgba($in-progress-fill, $status-opacity * 0.25) 50%,
                rgba($in-progress-fill, math.div($status-opacity, 1.5)) 50%, rgba($in-progress-fill, math.div($status-opacity, 1.5)) 75%,
                rgba($in-progress-fill, $status-opacity * 0.25) 75%, rgba($in-progress-fill, $status-opacity * 0.25));
$in-progress-bg-size: 100%;

// FAILED
$failed-fill: $red;
$failed-bg-img: linear-gradient(to right, rgba($failed-fill, $status-opacity), rgba($failed-fill, $status-opacity));
$failed-total-bg-img: linear-gradient(to right, rgba($failed-fill, $total-status-opacity), rgba($failed-fill, $total-status-opacity));
$failed-cb-bg-img:
        linear-gradient(135deg, rgba($failed-fill, math.div($status-opacity, 1.5)) 25%, rgba($failed-fill, math.div($status-opacity, 6)) 25%),
        linear-gradient(225deg, rgba($failed-fill, math.div($status-opacity, 1.5)) 25%, rgba($failed-fill, math.div($status-opacity, 6)) 25%),
        linear-gradient(315deg, rgba($failed-fill, math.div($status-opacity, 1.5)) 25%, rgba($failed-fill, math.div($status-opacity, 6)) 25%),
        linear-gradient( 45deg, rgba($failed-fill, math.div($status-opacity, 1.5)) 25%, rgba($failed-fill, math.div($status-opacity, 6)) 25%);
$failed-bg-size: 25%;


.assignment-progress-details, .group-progress-summary {
  td, .key-cell, tr {
    .completed {
      background-image: $completed-bg-img;
      background-size: $completed-bg-size;
    }
    .passed {
      background-image: $passed-bg-img;
      background-size: $passed-bg-size;
    }
    .in-progress {
      background-image: $in-progress-bg-img;
      background-size: $in-progress-bg-size;
    }
    .failed {
      background-image: $failed-bg-img;
      background-size: $failed-bg-size;
    }
  }

  .completed th {
    &:first-child, .icon-person { color: rgba($perfect-fill, 1); }
    &.total-column {
      background-image: $completed-total-bg-img;
      background-size: $completed-bg-size;
    }
  }

  .passed th {
    &:first-child, .icon-person { color: rgba($passed-fill, 1); }
    &.total-column {
      background-image: $passed-total-bg-img;
      background-size: $passed-bg-size;
    }
  }

  .in-progress th {
    &:first-child, .icon-person  { color: rgba($default-name-fill, 1); }
    &.total-column {
      background-image: $in-progress-total-bg-img;
      background-size: $in-progress-bg-size;
    }
  }

  .failed th {
    &:first-child, .icon-person { color: rgba($failed-fill, 1); }
    &.total-column {
      background-image: $failed-total-bg-img;
      background-size: $failed-bg-size;
    }
  }

  .not-attempted {
    th {
      &:first-child, .icon-person  { color: rgba($default-name-fill, 1); }
    }
  }
  .revoked {
    th {
      &:first-child, .icon-person {
        color: gray;
      }
    }
  }

  .key-cell span {
    border: 1px solid black;
    display: inline-block;
    width: 22px;
    height: 22px;
  }

  .key-description {
    text-align: left;
    font-weight: 400;
    margin: 0;
    padding: 0;
    @include respond-above(sm) {
      margin-left: 0.75rem;
    }
  }
}

.assignment-progress-details.colour-blind,
.group-progress-summary.colour-blind {
  td, .key-cell, tr {
    .completed {
      background-image: $completed-cb-bg-img;
    }
    .passed {
      background-image: $passed-cb-bg-img;
    }
    .in-progress {
      background-image: $in-progress-cb-bg-img;
    }
    .failed {
      background-image: $failed-cb-bg-img;
    }
  }

  .completed th.total-column { background-image: $completed-cb-bg-img;}
  .passed th.total-column { background-image: $passed-cb-bg-img; }
  .in-progress th.total-column { background-image: $in-progress-cb-bg-img; }
  .failed th.total-column { background-image: $failed-cb-bg-img; }
}

.assignment-progress-options {
  clear: both;
  font-size: 0.875rem;
  text-align: right;
}

.assignment-progress-options label {
  padding-left: 1rem;
  padding-right: 0.25rem;
}

.assignment-progress-details {
  counter-reset: board-count;
}

.assignment-progress-gameboard {
  padding: 0 1.5rem 1.5rem 1.5rem;
}

.assignment-progress-gameboard .gameboard-header {
  background: #fff;
  border: 1px solid $gray-118;
  align-content: stretch;
  display: flex;
  cursor: pointer;
  justify-content: space-between;
}

.assignment-progress-gameboard .gameboard-title {
  display: flex;
  border: 0px;
}

.assignment-progress-gameboard .gameboard-header > *:first-child:before {
  background: $primary;
  counter-increment: board-count;
  content: counter(board-count) ". ";
  display: inline-block;
  padding: 0.5rem 1rem;
  font-weight: bold;
}
.assignment-progress-gameboard .gameboard-title span {
  padding-left: 0.75rem;
  font-size: 1.2rem;
}
.gameboard-due-date {
  font-weight: normal;
  color: $gray-160;
  font-size: 0.875rem !important;
}

.gameboard-links {
  align-items: baseline;
  display: flex;
  padding-right: 0.5rem;
  margin-left: auto;
}
.gameboard-links > * {
  margin-right: 0.3rem;
}

.assignment-progress-progress,
.group-progress-summary {
  background: $gray-103;
  border: 1px solid $gray-118;
  border-top: none;
}

.group-progress-summary table {
  border-left: 1px solid $gray-118;
  border-right: 1px solid $gray-118;
}

.progress-header {
  text-align: center;
  padding: 0.5rem 0;
  @include respond-above(sm) {
    font-size: 1.1rem;
  }
}

.progress-questions {
  border-top: 1px solid $gray-118;
  display: flex;
  justify-content: space-between;
  @include respond-above(sm) {
    font-size: 1.2rem;
  }
  align-items: center;
  background: white;
}

.progress-questions button {
  align-self: flex-end;
  min-width: 65px;
  border-radius: 0;
  padding: 0.5rem 0;
  border: 1px solid $gray-118;
  margin: -1px;
  z-index: 10;
  &.btn.disabled {
    opacity: 0.5;
  }
}

@mixin table-sticky() {
  position: sticky !important;
  position: -webkit-sticky !important;
  background-clip:  padding-box !important;
  background: $gray-103;
  z-index: 2;
}

@mixin after-border() {
  content: '';
  position: absolute;
  margin: -0.5px -0.5px;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.single-download {
  position: relative;
  text-align: right;
}

.progress-table-container {
  width: 100% !important;
  display: block;
  overflow-y: auto;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

// Safari 10.1+
// https://stackoverflow.com/questions/16348489/is-there-a-css-hack-for-safari-only-not-chrome
@media not all and (min-resolution:.001dpcm)
{ @supports (-webkit-appearance:none) {
  .progress-table-container {
    overflow-x: scroll !important;
  }
}}

.progress-table {
  padding-bottom: 1px; // Fixes odd broswer bugs around the magic :after borders

  th.selected {
    // Fixes Firefox bug with position: relative table cells: https://bugzilla.mozilla.org/show_bug.cgi?id=688556
    background-clip: padding-box !important;
  }

  tbody tr:nth-of-type(even) {
    background: $gray-103;
    th {
      background: $gray-103;
    }
  }

  tbody tr:nth-of-type(odd) {
    background: white;
    th {
      background: white;
    }
  }

  font-size: 12px;
  tbody td, tbody th {
    min-width: 40px;
    z-index: 1;
  }
  .total-column.left {
    right: 40px;
  }

  @include respond-above(sm) {
    font-size: 17px;
    tbody td, tbody th {
      min-width: 65px;
    }
    .total-column.left {
      right: 65px;
    }
  }

  thead th {
    //border-top: 1px solid $gray-118;
    border-bottom: 1px solid $gray-118;
    &.selected {
      border-top-color: #fff;
      background: #fff;
    }
    &:not(.selected):after {
      @include after-border;
      border-top: 2px solid $gray-160;
    }
  }

  tfoot th {
    border-top: 1px solid $gray-118;
    &.selected {
      background: #fff;
    }
  }

  .progress-table-header-footer th {
    position: relative;
    padding-right: 8px;
  }

  .progress-table-header-footer button {
    background: none;
    border: none;
    padding: 0;

    position: absolute;
    right: 2px;
    font-size: 8px;
    top: 1px;
    z-index: 1;

    line-height: initial;
    span {
      opacity: 0.5;
      display: block;
    }
    .up {
      padding-top: 10px;
    }
    .down {
      padding-bottom: 10px;
    }
  }

  .progress-table-header-footer .sorted.forward .up, .progress-table-header-footer .sorted.reverse .down {
    opacity: 1;
  }

  td, th {
    vertical-align: middle;
    text-align: center;
    line-height: 1.3rem;
  }

  .revoked .student-name {
    text-decoration: line-through;
  }

  .selected {
    border-left: 2px solid $gray-160;
    border-right: 2px solid $gray-160;
  }

  th {
    font-weight: normal;
  }

  td.selected, td.total-column {
    font-weight: bold;
  }

  .student-name {
    font-weight: bold;
    color: $text-muted;
    padding-top: 5px;
    padding-bottom: 5px;
    min-width: 130px;

    @include table-sticky;
    left: 0;
    top: 0;
    width: 195px;
    &:after {
      @include after-border;
      border-right: 1px solid $gray-118;
      border-left: 1px solid $gray-118;
      pointer-events: none; // don't intercept clicks as we want links in the th element
    }
  }

  .total-column {
    @include table-sticky;
    width: 65px;
    right: 0;
    top: 0;
    &:after {
      @include after-border;
      border-right: 1px solid $gray-118;
      border-left: 1px solid $gray-118;
      pointer-events: none; // don't intercept clicks as we want links in the th element
    }
  }
}

