@use "sass:math";

@include respond-below(sm) {
  .assignment-progress-gameboard {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
}

.assignment-progress-card {
  border: 1px solid $gray-118;
  border-radius: 0.5rem;
  cursor: pointer;
  background: white;
  font-size: 1rem;
  transition: transform 0.2s ease-out, border-color 0.2s ease-out;

  &:hover, &.open {
    border-color: $gray-136;
  }
}

a:has(> .assignment-progress-group) {
  text-decoration: none !important;
  color: inherit;
}


.assignment-progress-group {
  @extend .assignment-progress-card;
  
  a.assignment-csv-download-link {
    font-size: inherit;
    width: max-content;
    align-content: center;
  }

  &:hover {
    @include not-reduced-motion {
        transform: scale(1.01);
    }
  }
}

.assignment-progress-group-overview {
  @include media-breakpoint-up(lg) {
    > :not(:first-child)::before {
      content: '';
      display: inline-block;
      padding-right: 0.8rem;
      height: 100%;
      border-left: 1px solid $gray-118;
    }
  }
}

.accordion-arrow {
  transform: rotate(180deg);
  transition: transform 0.2s ease-in-out;
}

.active.accordion-arrow {
  transform: rotate(0deg);
}

.assignment-progress-details {
  background: $gray-107;
}

.single-assignment {
  background: none !important;
  margin-top: 0 !important;
}

.assignment-progress-legend {
  background: #fff;
  border: 1px solid $gray-118;
  padding: 1rem;
}


/*
    My progress styles
*/

// GENERIC
$status-opacity: 0.5;
$total-status-opacity: 0.5;

// COMPLETED
$completed-bg-img: linear-gradient(to right, rgba($perfect-fill, $status-opacity), rgba($perfect-fill, $status-opacity));
$completed-total-bg-img: linear-gradient(to right, rgba($perfect-fill, $total-status-opacity), rgba($perfect-fill, $total-status-opacity));
$completed-cb-bg-img: linear-gradient(
                to right, rgba($perfect-fill, $status-opacity), rgba($perfect-fill, $status-opacity));
$completed-bg-size: 100%;

// FULLY ATTEMPTED
$fully-attempted-bg-img: linear-gradient(to right, rgba($fully-attempted-fill, $status-opacity), rgba($fully-attempted-fill, $status-opacity));
$fully-attempted-total-bg-img: linear-gradient(to right, rgba($fully-attempted-fill, $total-status-opacity), rgba($fully-attempted-fill, $total-status-opacity));
$fully-attempted-cb-bg-img: linear-gradient(
                to right, rgba($fully-attempted-fill, $status-opacity), rgba($fully-attempted-fill, $status-opacity));
$fully-attempted-bg-size: 100%;

// PASSED
$passed-bg-img: linear-gradient(to right, rgba($passed-fill, $status-opacity), rgba($passed-fill, $status-opacity));
$passed-total-bg-img: linear-gradient(to right, rgba($passed-fill, $total-status-opacity), rgba($passed-fill, $total-status-opacity));
$passed-cb-bg-img: linear-gradient(
                to bottom left, rgba($passed-fill, math.div($status-opacity, 1.5)) 25%,
                rgba($passed-fill, $status-opacity * 0.5) 25%, rgba($passed-fill, $status-opacity * 0.5) 50%,
                rgba($passed-fill, math.div($status-opacity, 1.5)) 50%, rgba($passed-fill, math.div($status-opacity, 1.5)) 75%,
                rgba($passed-fill, $status-opacity * 0.5) 75%, rgba($passed-fill, $status-opacity * 0.5));
$passed-bg-size: 50%;

// IN-PROGRESS
$in-progress-bg-img: linear-gradient(to right, rgba($in-progress-fill, $status-opacity * 0.5), rgba($in-progress-fill, $status-opacity * 0.5));
$in-progress-total-bg-img: linear-gradient(to right, rgba($in-progress-fill, $total-status-opacity * 0.5), rgba($in-progress-fill, $total-status-opacity * 0.5));
$in-progress-cb-bg-img: linear-gradient(
                to bottom left, rgba($in-progress-fill, math.div($status-opacity, 1.5)) 25%,
                rgba($in-progress-fill, $status-opacity * 0.25) 25%, rgba($in-progress-fill, $status-opacity * 0.25) 50%,
                rgba($in-progress-fill, math.div($status-opacity, 1.5)) 50%, rgba($in-progress-fill, math.div($status-opacity, 1.5)) 75%,
                rgba($in-progress-fill, $status-opacity * 0.25) 75%, rgba($in-progress-fill, $status-opacity * 0.25));
$in-progress-bg-size: 100%;

// FAILED
$failed-bg-img: linear-gradient(to right, rgba($failed-fill, $status-opacity), rgba($failed-fill, $status-opacity));
$failed-total-bg-img: linear-gradient(to right, rgba($failed-fill, $total-status-opacity), rgba($failed-fill, $total-status-opacity));
$failed-cb-bg-img:
        linear-gradient(135deg, rgba($failed-fill, math.div($status-opacity, 1.5)) 25%, rgba($failed-fill, math.div($status-opacity, 6)) 25%),
        linear-gradient(225deg, rgba($failed-fill, math.div($status-opacity, 1.5)) 25%, rgba($failed-fill, math.div($status-opacity, 6)) 25%),
        linear-gradient(315deg, rgba($failed-fill, math.div($status-opacity, 1.5)) 25%, rgba($failed-fill, math.div($status-opacity, 6)) 25%),
        linear-gradient( 45deg, rgba($failed-fill, math.div($status-opacity, 1.5)) 25%, rgba($failed-fill, math.div($status-opacity, 6)) 25%);
$failed-bg-size: 25%;


.assignment-progress-details, .group-progress-summary {
  td, .key-cell, tr {
    .completed {
      background-image: $completed-bg-img;
      background-size: $completed-bg-size;
    }
    .fully-attempted {
      background-image: $fully-attempted-bg-img;
      background-size: $fully-attempted-bg-size;
    }
    .passed {
      background-image: $passed-bg-img;
      background-size: $passed-bg-size;
    }
    .in-progress {
      background-image: $in-progress-bg-img;
      background-size: $in-progress-bg-size;
    }
    .failed {
      background-image: $failed-bg-img;
      background-size: $failed-bg-size;
    }
  }

  .completed th {
    &:first-child { color: rgba($perfect-fill, 1); }
    &.total-column {
      background-image: $completed-total-bg-img;
      background-size: $completed-bg-size;
    }
  }

  .fully-attempted th {
    &:first-child { color: rgba($fully-attempted-fill, 1); }
    &.total-column {
      background-image: $fully-attempted-total-bg-img;
      background-size: $fully-attempted-bg-size;
    }
  }

  .passed th {
    &:first-child { color: rgba($passed-fill, 1); }
    &.total-column {
      background-image: $passed-total-bg-img;
      background-size: $passed-bg-size;
    }
  }

  .in-progress th {
    &:first-child  { color: rgba($default-name-fill, 1); }
    &.total-column {
      background-image: $in-progress-total-bg-img;
      background-size: $in-progress-bg-size;
    }
  }

  .failed th {
    &:first-child { color: rgba($failed-fill, 1); }
    &.total-column {
      background-image: $failed-total-bg-img;
      background-size: $failed-bg-size;
    }
  }

  .not-attempted {
    th {
      &:first-child { color: rgba($default-name-fill, 1); }
    }
  }
  .revoked {
    th {
      &:first-child {
        color: gray;
      }
    }
  }

  .key-cell span {
    border: 1px solid black;
    display: inline-block;
    width: 22px;
    height: 22px;
  }

  .key-description {
    text-align: left;
    font-weight: 400;
    margin: 0;
    padding: 0;
  }
}

.assignment-progress-details.colour-blind,
.group-progress-summary.colour-blind {
  td, .key-cell, tr {
    .completed {
      background-image: $completed-cb-bg-img;
    }
    .fully-attempted {
      background-image: $fully-attempted-cb-bg-img;
    }
    .passed {
      background-image: $passed-cb-bg-img;
    }
    .in-progress {
      background-image: $in-progress-cb-bg-img;
    }
    .failed {
      background-image: $failed-cb-bg-img;
    }
  }

  .completed th.total-column { background-image: $completed-cb-bg-img;}
  .passed th.total-column { background-image: $passed-cb-bg-img; }
  .fully-attempted th.total-column { background-image: $fully-attempted-cb-bg-img; }
  .in-progress th.total-column { background-image: $in-progress-cb-bg-img; }
  .failed th.total-column { background-image: $failed-cb-bg-img; }
}

.assignment-progress-options {
  clear: both;
  font-size: 0.875rem;
  text-align: right;
}

.assignment-progress-options > label {
  margin: auto 1rem auto 0.25rem;
  
  > input {
    vertical-align: middle;
  }
}

.assignment-progress-details {
  counter-reset: board-count;
}

.assignment-progress-gameboard {
  padding: 0 1.5rem 1.5rem 1.5rem;
}

.assignment-progress-gameboard .gameboard-header {
  background: #fff;
  border: 1px solid $gray-118;
  align-content: stretch;
  display: flex;
  cursor: pointer;
  justify-content: space-between;
  align-items: stretch;
}

.assignment-progress-gameboard .gameboard-title {
  display: flex;
  border: 0px;
  text-decoration: none;
  &:hover {
    text-decoration: underline;
  }
}

.assignment-progress-gameboard .gameboard-header > *:first-child:before {
  background: $gray-118 !important;
  counter-increment: board-count;
  content: counter(board-count) ". ";
  display: inline-grid;
  height: 100%;
  padding: 0.5rem 1rem;
  font-weight: bold;
  align-content: center;
}
.assignment-progress-gameboard .gameboard-title span {
  padding-left: 0.75rem;
  font-size: 1.2rem;
  text-align: start;
}
.gameboard-due-date {
  font-weight: normal;
  color: $gray-160;
  font-size: 0.875rem !important;
}

.gameboard-links {
  align-items: baseline;
  display: flex;
  padding-right: 0.5rem;
  margin-left: auto;
}
.gameboard-links > * {
  margin-right: 0.3rem;
  min-width: max-content !important;
}

.assignment-progress-table-wrapper {
  overflow: auto;
  display: block;
  max-height: max(200px, 65vh);
}

.group-progress-summary {
  background: $gray-103;
  border: 1px solid $gray-118;
}

.gameboard-header + .assignment-progress-progress, // assignment progress assignment view
.gameboard-header + .assignment-progress-details > .assignment-progress-progress, // assignment progress test view
.group-progress-summary {
  border-top: none;
}

.group-progress-summary table {
  border-left: 1px solid $gray-118;
  border-right: 1px solid $gray-118;
}

.progress-header {
  text-align: center;
  padding: 0.5rem 0;
  @include respond-above(sm) {
    font-size: 1.1rem;
  }
}

.progress-questions {
  border-top: 1px solid $gray-118;
  display: flex;
  justify-content: space-between;
  @include respond-above(sm) {
    font-size: 1.2rem;
  }
  align-items: center;
  background: white;
}

.progress-questions button {
  align-self: flex-end;
  min-width: 65px;
  border-radius: 0;
  padding: 0.5rem 0;
  border: 1px solid $gray-118;
  margin: -1px;
  z-index: 10;
  &.btn.disabled {
    opacity: 0.5;
    border: 1px solid $gray-118;
  }
}

@mixin after-border() {
  content: '';
  position: absolute;
  margin: -0.5px -0.5px;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.single-download {
  position: relative;
  text-align: right;
}

.progress-table-container {
  width: 100% !important;
  display: block;
  overflow-y: auto;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

// Safari 10.1+
// https://stackoverflow.com/questions/16348489/is-there-a-css-hack-for-safari-only-not-chrome
@media not all and (min-resolution:.001dpcm)
{ @supports (-webkit-appearance:none) {
  .progress-table-container {
    overflow-x: scroll !important;
  }
}}

.progress-table {
  padding-bottom: 1px; // Fixes odd broswer bugs around the magic :after borders

  tr, th {
    // sticky columns need a background colour to hide content behind it. this color depends on below, so we make all tr and (possibly sticky) th inherit bg-c.
    background-color: inherit;
  }

  font-size: 12px;
  tbody td, tbody th {
    min-width: 50px;
    z-index: 1;
  }
  .total-column.left {
    right: 50px;
  }

  @include respond-between(xs, sm) {
    font-size: 14px;
    tbody td, tbody th {
      min-width: 65px;
    }
    .total-column.left {
      right: 65px;
    }
  }

  @include respond-above(sm) {
    font-size: 17px;
    tbody td, tbody th {
      min-width: 85px;
    }
    .total-column.left {
      right: 85px;
    }
  }

  thead th {
    border-bottom: 1px solid $gray-118;
  }

  tfoot th, tfoot td {
    border-top: 1px solid $gray-118;
  }

  @include respond-below(xs) {
    button.sort {
      display: none;
    }
  }

  .progress-table-header-footer button {
    background: none;
    border: none;
    padding: 0;
    margin-left: 0.5rem;
    font-size: 10px;
    z-index: 1;
    line-height: initial;

    span {
      opacity: 0.3;
      display: block;
    }
  }

  .progress-table-header-footer .reverse .arrow {
    transform: rotate(180deg);
  }

  .progress-table-header-footer .sorted .arrow {
    opacity: 1;
  }

  td, th {
    vertical-align: middle;
    text-align: center;
    line-height: 1.3rem;
  }

  .revoked .student-name {
    text-decoration: line-through;
  }

  th, tfoot td {
    font-weight: $font-weight-semibold;
  }

  --student-name-width: 16rem;
  --correct-attempted-width: 7rem;

  @include respond-below(md) {
    --student-name-width: 12rem;
    --correct-attempted-width: 6rem;
  }

  @include respond-below(sm) {
    --student-name-width: 8rem;
  }

  .student-name {
    min-width: var(--student-name-width);
    width: var(--student-name-width);
    word-break: break-word;
  }

  .progress-table-header-footer .correct-attempted-header {
    @include respond-between(sm, sm) {
      font-size: 0.9rem;
    }
    width: var(--correct-attempted-width);
    min-width: var(--correct-attempted-width);
  }

  .sticky-ca-col {
    @include respond-above(lg) {
      position: sticky;
      z-index: 2;
      &:nth-child(2) {
        left: var(--student-name-width);
      }
      
      &:nth-child(3) {
        left: calc(var(--student-name-width) + var(--correct-attempted-width));
      }
    }
  }
}
