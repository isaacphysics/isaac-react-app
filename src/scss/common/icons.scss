.icon-email-status {
  display: inline-block;
  width: 25px;
  height: 19px;
  margin-left: 15px;
  margin-bottom: -7px;
  background: url(/assets/common/email-status.png) no-repeat;
  background-size: 75px;
}
.icon-email-status.unverified {
  background-position: -25px 0px;
}
.icon-email-status.failed {
  background-position: -50px 0px;
}

.icon-reset {
  display: inline-block;
  overflow: hidden;
  width: 1.25rem;
  height: 1.25rem;
  background: url(/assets/common/icons/reset.svg) no-repeat;
  margin-bottom: -4px;
  margin-left: 10px;
  margin-right: 10px;
}

polygon.fill-secondary {
  fill: $secondary;
}

.dropzone-dropdown {
  position: absolute;
  align-self: center;
  right: 5px;
  @extend .icon-dropdown-180;
  opacity: 0.3;
}

@mixin icon-dropdown($deg) {
  transform: rotate($deg);
  -webkit-transform: rotate($deg);
  -ms-transform: rotate($deg);
}

.icon-dropdown-180 {
  &.active {
    @include icon-dropdown(-180deg); // negative so it points outwards while spinning
  }
  @include not-reduced-motion {
    transition: transform 0.15s ease-in-out;
  }
}

.icon-dropdown-90 {
  &.active {
    @include icon-dropdown(90deg);
  }
  @include not-reduced-motion {
    transition: transform 0.15s ease-in-out;
  }
}

img[aria-disabled="true"] {
  opacity: 0.5;
}

.icon-download {
  @include svg-icon('/assets/common/icons/download.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-chevron-right {
  // use for dropdowns, tabs, etc. prefer arrow-right for links.
  @include svg-icon('/assets/common/icons/chevron-right.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%), 35% 50%);
}

.icon-chevron-down {
  @include svg-icon('/assets/common/icons/chevron-right.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%), 35% 50%);
  // we use `rotate: x` for image rotations, and `transform: rotate(x)` for individual element rotations.
  // this means we can reuse just one image for all directions, and animations can animate over transform oblivious to the image rotation.
  rotate: 90deg;
}

.icon-chevron-left {
  @include svg-icon('/assets/common/icons/chevron-right.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%), 35% 50%);
  rotate: 180deg;
}

.icon-chevron-up {
  @include svg-icon('/assets/common/icons/chevron-right.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%), 35% 50%);
  rotate: -90deg;
}

.icon-arrow-right {
  @include svg-icon('/assets/common/icons/arrow-right.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-arrow-left {
  @include svg-icon('/assets/common/icons/arrow-right.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
  rotate: 180deg;
}

.icon-search {
  @include svg-icon('/assets/common/icons/search-icon.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-file {
  @include svg-icon('/assets/common/icons/file.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-person {
  @include svg-icon('/assets/common/icons/person.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-school {
  @include svg-icon('/assets/common/icons/school.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-event-upcoming {
  @include svg-icon('/assets/common/icons/event-upcoming.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-event-complete {
  @include svg-icon('/assets/common/icons/event-complete.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-task-complete {
  @include svg-icon('/assets/common/icons/task-complete.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-file {
  @include svg-icon('/assets/common/icons/file.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-person {
  @include svg-icon('/assets/common/icons/person.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-school {
  @include svg-icon('/assets/common/icons/school.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-event-upcoming {
  @include svg-icon('/assets/common/icons/event-upcoming.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-event-complete {
  @include svg-icon('/assets/common/icons/event-complete.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-location {
  @include svg-icon('/assets/common/icons/location.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-task-complete {
  @include svg-icon('/assets/common/icons/task-complete.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-new-tab {
  @include svg-icon('/assets/common/icons/open-in-new.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-fullscreen {
  @include svg-icon('/assets/common/icons/fullscreen.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-undo {
  @include svg-icon('/assets/common/icons/undo.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-redo {
  @include svg-icon('/assets/common/icons/redo.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-access-visual {
  @include svg-icon('/assets/common/icons/access-visual.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-access-motor {
  @include svg-icon('/assets/common/icons/access-motor.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-ai {
  @include svg-icon('/assets/common/icons/ai.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

// Icon sizing
.icon {
  --icon-size: 16px;
  --mask-size: 100%;
}

.icon-md {
  --icon-size: 24px;
  --mask-size: 100%;
}

.icon-lg {
  --icon-size: 60px;
  --mask-size: initial;
}

.icon-xl {
  --icon-size: 75px;
  --mask-size: initial;
}

.icon-inline { // intended for inline 16px icons
  --icon-size: 1lh;
  --mask-size: 83%;
  vertical-align: bottom;
}

i.icon:not(.icon-raw) {
  &, &[color="primary"] {
    background-color: var(--layered-icon-parent-bg-override, var(--icon-primary));
    
    @include not-reduced-motion {
      transition: all 0.15s ease-in-out; // mirrors BS's $btn-transition
    }
  
    // for layered icons, the ::after element takes the colour while the ::before remains uncoloured
    &::after {
      background-color: var(--icon-primary);
      
      @include not-reduced-motion {
        transition: all 0.15s ease-in-out;
      }
    }

    // however, the ::before is also able to change colour, e.g. during hover inversions on keyline or tint buttons
    &::before {
      @include not-reduced-motion {
        transition: all 0.15s ease-in-out;
      }
    }
  }

  &[color="secondary"] {
    background-color: var(--layered-icon-parent-bg-override, var(--icon-secondary));
    &::after {
      background-color: var(--icon-secondary);
    }
  }

  &[color="tertiary"] {
    background-color: var(--layered-icon-parent-bg-override, var(--icon-tertiary));
    &::after {
      background-color: var(--icon-tertiary);
    }
  }

  &[color="white"] {
    background-color: $white;
    &::after {
      background-color: $white;
    }
  }
}
