.bg-grey {
  background: rgba($gray-120, 0.6);
}

.icon-email-status {
  display: inline-block;
  width: 25px;
  height: 19px;
  margin-left: 15px;
  margin-bottom: -7px;
  background: url(/assets/common/email-status.png) no-repeat;
  background-size: 75px;
}
.icon-email-status.unverified {
  background-position: -25px 0px;
}
.icon-email-status.failed {
  background-position: -50px 0px;
}

.icon-reset {
  display: inline-block;
  overflow: hidden;
  width: 1.25rem;
  height: 1.25rem;
  background: url(/assets/common/icons/reset.svg) no-repeat;
  margin-bottom: -4px;
  margin-left: 10px;
  margin-right: 10px;
}

polygon.fill-secondary {
  fill: $secondary;
}

.dropzone-dropdown {
  position: absolute;
  align-self: center;
  right: 5px;
  @extend .icon-dropdown-180;
  opacity: 0.3;
}

@mixin icon-dropdown($deg) {
  transform: rotate($deg);
  -webkit-transform: rotate($deg);
  -ms-transform: rotate($deg);
}

.icon-dropdown-180 {
  &.active {
    @include icon-dropdown(180deg);
  }
  @include not-reduced-motion {
    transition: transform 0.15s ease-in-out;
  }
}

.icon-dropdown-90 {
  &.active {
    @include icon-dropdown(90deg);
  }
  @include not-reduced-motion {
    transition: transform 0.15s ease-in-out;
  }
}

img[aria-disabled="true"] {
  opacity: 0.5;
}

.icon-download {
  @include svg-icon('/assets/common/icons/download.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-chevron-right {
  @include svg-icon('/assets/common/icons/arrow-right.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-search {
  @include svg-icon('/assets/common/icons/search-icon.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-file {
  @include svg-icon('/assets/common/icons/file.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-person {
  @include svg-icon('/assets/common/icons/person.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-school {
  @include svg-icon('/assets/common/icons/school.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-event-upcoming {
  @include svg-icon('/assets/common/icons/event-upcoming.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-event-complete {
  @include svg-icon('/assets/common/icons/event-complete.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-task-complete {
  @include svg-icon('/assets/common/icons/task-complete.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-correct {
  @include svg-icon-raw('/assets/common/icons/correctness-correct.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-incorrect {
  @include svg-icon-raw('/assets/common/icons/correctness-incorrect.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-partial {
  @include svg-icon-raw('/assets/common/icons/correctness-partial.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-not-attempted {
  @include svg-icon-raw('/assets/common/icons/correctness-not-attempted.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-file {
  @include svg-icon('/assets/common/icons/file.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-person {
  @include svg-icon('/assets/common/icons/person.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-school {
  @include svg-icon('/assets/common/icons/school.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-event-upcoming {
  @include svg-icon('/assets/common/icons/event-upcoming.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-event-complete {
  @include svg-icon('/assets/common/icons/event-complete.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-task-complete {
  @include svg-icon('/assets/common/icons/task-complete.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-correct {
  @include svg-icon-raw('/assets/common/icons/correctness-correct.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-incorrect {
  @include svg-icon-raw('/assets/common/icons/correctness-incorrect.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-partial {
  @include svg-icon-raw('/assets/common/icons/correctness-partial.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

.icon-not-attempted {
  @include svg-icon-raw('/assets/common/icons/correctness-not-attempted.svg', var(--icon-size), var(--icon-size), var(--mask-size, 60%));
}

// Icon sizing
.icon {
  --icon-size: 16px;
  --mask-size: 100%;
}

.icon-md {
  --icon-size: 24px;
  --mask-size: 100%;
}

.icon-lg {
  --icon-size: 60px;
  --mask-size: initial;
}

.icon-xl {
  --icon-size: 75px;
  --mask-size: initial;
}

@mixin icon-color-override($color) {
  &.layered {
    &::before {
      background-color: $color !important;
    }
    &::after {
      background-color: $color !important;
    }
  }

  // .layered is a bit grim; if we could set something in @svg-icon-layered as a flag instead this would be ideal.
  &:not(.layered) {
    background-color: $color !important;
  }
}

i.icon:not(.icon-raw) {
  &, &[color="primary"] {
    background-color: var(--icon-primary);
    
    @include not-reduced-motion {
      transition: background-color 0.15s ease-in-out; // mirrors BS's $btn-transition
    }
  
    // for layered icons, the ::after element takes the colour while the ::before remains uncoloured
    &::after {
      background-color: var(--icon-primary);
      
      @include not-reduced-motion {
        transition: background-color 0.15s ease-in-out;
      }
    }
  }

  &[color="secondary"] {
    background-color: var(--icon-secondary);
    &::after {
      background-color: var(--icon-secondary);
    }
  }

  &[color="tertiary"] {
    background-color: var(--icon-tertiary);
    &::after {
      background-color: var(--icon-tertiary);
    }
  }

  &[color="white"] {
    background-color: $white;
    &::after {
      background-color: $white;
    }
  }
}
