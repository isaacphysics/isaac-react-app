.rounded-card {
  border-radius: 8px;
}

// stylistically this would work better as a class with a @extend of this class in the @container query, 
// but the generated CSS seemingly ignores the @container condition when using @extend?
@mixin horizontal-pod-container {
  .pod.force-horizontal {
    @content;
  }

  @container pod-parent (min-width: 576px) {
    .pod:not(.no-horizontal) {
      @content;
    }
  }
}

div:has(> .pod) {
  container: pod-parent / inline-size;

  @include horizontal-pod-container {
    display: flex;
    flex-direction: row;
    width: 100%;
    padding: $card-spacer-x;
    
    > a.card-img-container {
      width: 35%;
      min-width: 35%;
      height: 100%;
      padding-right: $card-spacer-x;
    
      > img {
        border-radius: $card-inner-border-radius;
      }
    }

    .card-body {
      padding: 0;
      padding-left: $card-spacer-x;
    }

    .pod-title {
      font-size: 24px;
    }
  }
}

.pod {
  background-color: white;
  box-shadow: 2px 4px 10px 0 $shadow-08;
  border-radius: 1rem;
  border: none;
  height: 100%;
  width: 100%;
  
  a:has(> img) {
    height: min-content;
    > img {
      width: 100%;
      aspect-ratio: 16/9;
      object-fit: cover;

      &.programme-img {
        aspect-ratio: 16/7;
      }
    }
  }

  .event-pod-img {
    position: relative;
    height: min-content;

    .event-pod-badge {
      position: absolute;
      margin: 3%;
    }

    .event-pod-hex {
      position: absolute;
      top: 1px;
      right: 5%;
      color: white;

      > b {
        font-family: $secondary-font;
        font-weight: 600;
        position: absolute;
        text-align: center;
        font-size: 12px;
        padding-top: 5px;
      }
    }
  }

  .expired {
    filter: grayscale(1);
  }
}
