@import "../common/assignment-progress";

$table-selected-background: rgb(223, 237, 255);
$table-selected-border: 2px solid rgb(75, 157, 252);

.assignment-progress-gameboard .gameboard-header > *:first-child:before {
  background: $secondary;
  color: white;
}

.assignment-progress-gameboard .gameboard-header:not(.text-muted) > *:first-child:before {
  background: $primary !important;
}

.assignment-count-pill {
  @include pill-tag(white, darken($phy_green, 20));
  min-width: 25px;
  text-align: center;
}

.progress-table {
  .selected {
    border-left: $table-selected-border;
    border-right: $table-selected-border;
    background: $table-selected-background;
    background-clip: padding-box;
  }

  .progress-table-question-link {
    // this relies on elements in the table never having relative positioning!
    // TODO: since the header is now sticky, this interferes with this :/
    position: absolute;
    width: 100%;
    left: 0;
  }

  td.selected, td.total-column {
    font-weight: bold;
  }

  background-color: $gray-103;
  // :is(thead, tfoot) tr :is(td, th) {
  // }

  tbody tr:nth-of-type(even) {
    background: $gray-103;
    th {
      background: $gray-103;
    }
  }

  tbody tr:nth-of-type(odd) {
    background: white;
    th {
      background: white;
    }
  }

  thead th, tfoot th, tfoot td {
    // this be enabled for all sticky elements.
    background: $gray-103;
  }

  &:has(.selected) {
    thead tr:nth-of-type(2) th {
      background: $table-selected-background;
      background-clip: padding-box;
    }
    
    thead tr:first-of-type th:not(.selected) {
      border-bottom: $table-selected-border;
    }

    tbody tr:first-of-type td:not(.selected), tbody tr:first-of-type th {
      border-top: $table-selected-border;
    }

    thead:has(tr:first-of-type .selected:last-of-type) tr:nth-of-type(2) th {
      // apply a selected border over the last column if selected
      border-right: $table-selected-border;
    }
  }
}
