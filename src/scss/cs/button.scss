@import "../common/button";

@mixin button-primary($color) {
  color: $color;
  &:not(:disabled):not(.disabled):active {
    // Keep colour the same on active (overrides base Bootstrap behaviour)
    color: $color;
  }
  &.disabled {
    @include button-disabled($cs-silver, $cs-jet);
  }
}

@mixin button-secondary($color, $background-color){
  border-width: 3px;
  &:not(:disabled):not(.disabled):active {
    // Keep colours the same on active (overrides base Bootstrap behaviour)
    background-color: $background-color;
    color: $color;
  }
  &:hover {
    // Keep colours the same on hover (overrides base Bootstrap behaviour)
    background-color: $background-color;
    color: $color;
  }
  &.disabled {
    @include button-disabled(transparent, $cs-silver);
  }
}

@mixin button-disabled($background-color, $color) {
  // Keep opacity and border when disabled (overrides base Bootstrap behaviour)
  border: 3px solid $cs-silver;
  opacity: 1;
  background-color: $background-color;
  color: $color;
}


.btn, input.btn {
  border-radius: 50px;
  border-width: 3px;

  @extend .font-size-1-25;
  @extend .font-weight-semi-bold;

  // Primary buttons (for dark background)
  &.btn-dark-primary {
    @include button-primary($cs-black);
  }

  // Secondary buttons (for dark background)
  // Secondary Button components are expected to use the 'outline' prop!
  &.btn-outline-dark-secondary {
    @include button-secondary($cs-pink, transparent);
  }

  // Primary buttons (light background)
  &.btn-primary {
    @include button-primary($cs-white);
  }

  // Secondary buttons (for light background)
  // Secondary Button components are expected to use the 'outline' prop!
  &.btn-outline-secondary {
    @include button-secondary($cs-dark-pink, transparent);
  }

  // FIXME ADA need to make all other buttons use these different hover and active colours
  &.btn-link {
    margin: 0;
    padding: 0;
    background: none !important;
    border: none !important;
    box-shadow: none !important;
    color: $cs-dark-pink;
    overflow: hidden;  // To stop margin collapse from hiding the focus outline
    text-decoration: underline;
    &:hover {
      color: $light-hover-dark-pink;
      text-decoration: none;
    }
    &:active {
      color: $light-active-dark-pink;
      text-decoration: none;
    }
    &:focus-visible {
      outline: 2px solid $cs-turquoise-blue !important;
      border-radius: 0 !important;
    }
    &.disabled {
      color: $cs-silver;
    }
  }

  // FIXME ADA: decide what to do with the following QQ buttons
  &.btn-negative {
    background-color: $highlight-yellow-50;
    color: black;
  }
  &.btn-neutral {
    background-color: $highlight-turquoise-50;
    color: black;
  }
  &.btn-positive {
    background-color: $highlight-dark-pink-50;
    color: black;
  }
  &.btn-negative-answer {
    background-color: $highlight-yellow;
    color: white;
  }
  &.btn-neutral-answer {
    background-color: $highlight-turquoise;
    color: white;
  }
  &.btn-positive-answer {
    background-color: $highlight-dark-pink;
    color: white;
  }
  &.hide-answer {
    background-color: $highlight-dark-pink !important;
    border: 1px solid transparent !important;
    color: $white !important;
  }
  &.hide-answer:not(:disabled):not(.disabled):active {
    text-decoration: underline;
  }
  &.confidence-help {
    min-width: 20px !important;
  }
}

.alert-hide {
  background-color: $highlight-dark-pink-25;
}

.quick-question-options {
  background: white;
  border: 2px solid $highlight-dark-pink;
}

.quick-question-secondary {
  background: $highlight-turquoise-25 !important;
  border: none !important;
}

.quick-question-muted {
  border-color: grey !important;
}

.btn-icon {
  @extend .btn;
  background-color: $cs-dark-pink;
  @include button-secondary($cs-dark-pink, $cs-dark-pink);
  padding: 0 !important;
  min-width: unset !important;
  width: 48px !important;
  height: 48px !important;
  background-repeat: no-repeat;
  background-position: 50% 50%;
}

.share-link-icon {
  position: relative;
  button {
    @extend .btn-icon;
    margin-right: 7.5px;
    margin-left: 7.5px;
    position: relative;
    z-index: 2;
    background-position: 48% 50%;
    background-image: url("/assets/cs/icons/share.svg");
  }
  .share-link {
    z-index: 1;
    top: 3px;
    font-family: $secondary-font !important;
    display: none;
    position: absolute;
    border: 1px solid gray;
    transform: translate(calc(30px - 100%));
    height: 42px;
    width: 70%;

    input {
      z-index: 1;
      padding-right: 40px;
      padding-left: 10px;
      white-space: nowrap;
      text-overflow: ellipsis;
      user-select: all;
      -webkit-user-select: all;
      -moz-user-select: all;
      -ms-user-select: all;
      width: 100%;
      height: 100%;
    }

    &.double-height {
      height: auto;
      padding-bottom: 10px;
      background: #fff;
      text-align: center;
      input {
        height: 42px;
        margin-bottom: 8px;
      }
    }
  }
}

.print-icon {
  @extend .btn-icon;
  margin-right: 7.5px;
  margin-left: 7.5px;
  background-image: url("/assets/cs/icons/print.svg");
}

.report-icon {
  @extend .btn-icon;
  margin-right: 7.5px;
  margin-left: 7.5px;
  background-image: url("/assets/cs/icons/flag.svg");
}
