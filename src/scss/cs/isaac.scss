// Ada brand and visual identity colours (see Brand Book)
$cs-black: #000000;
$cs-white: #ffffff;
$cs-turquoise-blue: #0AFFE7;
$cs-pink: #FF4DC9;
$cs-dark-pink: #870D5A;
$cs-yellow: #FFE672;
$cs-jet: #333333;
$cs-silver: #C2C2C2;
$cs-light-gray: #D6D6D6;
$cs-cultured: #F5F5F5;

// Theme
$theme-colors: ( // Special Bootstrap variable that is used to generate colour classes (e.g. text-pink)
    "primary": $cs-pink,
    "secondary": $cs-turquoise-blue,
    "turquoise-blue": $cs-turquoise-blue,
    "pink" : $cs-pink,
    "dark-pink" : $cs-dark-pink,
    "yellow" : $cs-yellow,
    "jet-grey" : $cs-jet,
    "silver-grey" : $cs-silver,
    "light-grey" : $cs-light-gray,
    "cultured-grey" : $cs-cultured,
);
$spacer: 1rem !default;
$spacers: ( // Special Bootstrap variable that is used to generate spacing classes (e.g. pd-md-6)
        6: ($spacer * 6.25) // 100px-ish
);

// fonts
$primary-font: "poppins-regular", sans-serif;
$secondary-font: 'poppins-regular', sans-serif;
$secondary-font-bold: 'poppins-bold', sans-serif;
$secondary-font-semi-bold: 'poppins-semibold', sans-serif;
$secondary-font-italic: 'poppins-italic', sans-serif;
$secondary-font-medium: $secondary-font;
$tertiary-font: 'poppins-light', sans-serif;

/*
*****************************************************************************************
* FIXME ADA: remove or replace all remaining colours between here and the imports below *
*  All variables used should be 'cs-*' or derivatives. We can add more if needed.       *
*****************************************************************************************
*/

// FIXME ADA: This is a bad name, but it is shared with and redefined by Physics.
$focus-blue: $cs-pink; // Used as focus indicator colour on inputs

// Colour Overrides
// FIXME ADA: I don't think overriding base Bootstrap colour definitions is the right way to go about this.
//  These are shared with and redefined by Physics.
$purple: $cs-dark-pink; // Something to do with links
$green: $cs-turquoise-blue; // Used in assignment progress table cells

// Stage colours
// FIXME ADA: Provisional.
$gcse-colour: $cs-pink; // All used for stage tags in accordions
$all-stages-colour: mix($cs-dark-pink, $cs-pink, 50%);
$a-level-colour: $cs-dark-pink;

// Highlighting colours
$highlight-navy: #07174F; // Used for buttons - positive answer
$highlight-navy-50: #838BA7; // Used for buttons - positive
$highlight-navy-25: #C1C5D3; // Used for buttons - alert hide
$highlight-teal: #0F8294; // Used for buttons - neutral answer
$highlight-teal-50: #87C0C9; // Used for buttons - neutral
$highlight-teal-25: #C3E0E4; // Used for buttons - quick question secondary
$highlight-mustard: #E09220; // Used for buttons - negative answer
$highlight-mustard-50: #EFC88F; // Used for buttons - negative

// Greys
// FIXME ADA: these can be presumably somehow be replaced with generated shades based on Nomensa greys.
$gray-103: #f8f8f8; // All used in various places, mainly for borders
$gray-107: #ececec;
$gray-110: #e7e7e7;
$gray-118: #d2d2d2;
$gray-120: #c9cad1;
$gray-136: #a3a3a3;
$gray-160: #666;
$gray-194: #0f0f0f;

$gray-blue: #636c73;

// Shadows
// FIXME ADA: these can also presumably be replaced with generated shades based on Nomensa greys.
$shadow-3: rgba(0, 0, 0, 0.3); // Used by buttons
$shadow-25: rgba(0, 0, 0, 0.25); // Used by forms
$shadow-08: rgba(0, 0, 0, 0.08); // Used in various places
$shadow-black: rgb(0, 0, 0); // Used by buttons

// ISAAC
// Node module imports
@import "~bootstrap/scss/bootstrap";
@import "~katex/dist/katex.min.css";
@import "~bootstrap-block-grid/dist/bootstrap4-block-grid.min.css";
@import "~billboard.js/dist/theme/insight.css";
@import "~highlight.js/styles/a11y-light.css";
@import "~leaflet/dist/leaflet.css";

@import "../common/isaac";

// Utility
@import "preload";
@import "../common/mixins";
@import "../common/animations";

// Atoms
@import "fonts";
@import "typography";
@import "headings";
@import "../common/modals";
@import "questions";
@import "../common/forms";
@import "../common/elements";
@import "../common/breadcrumbs";
@import "../common/media";
@import "tabs";
@import "../common/accordions";
@import "cards";
@import "../common/list-groups";
@import "inequality-modal";
@import "../common/carousel";
@import "../common/icons";
@import "../common/boards";
@import "../common/focus";
@import "../common/progress-bar";
@import "../common/anvil";
@import "../common/filter";
@import "../common/reservation-modal";
@import "../common/fasttrack";
@import "../common/scroll";
@import "button";
@import "logo";
@import "featured-profile";
@import "../common/code";
@import "question-finder";

// Navigation
@import "header";
@import "../common/navigation-bar";
@import "../common/footer";

// Pages
@import "../common/pages";
@import "homepage";
@import "../common/login";
@import "../common/registration";
@import "../common/assignments";
@import "../common/my-account";
@import "../common/topic";
@import "../common/search";
@import "../common/my-progress";
@import "../common/gameboard";
@import "../common/assignment-progress";
@import "../common/books";
@import "../common/groups";
@import "../common/events";
@import "../common/glossary";
@import "../common/quiz";
@import "accordions";
@import "../common/callout";

@import "parsons-layout";

// Print
@import "../common/print";

// Difficulty icons
@import "filter";

// Highlights
@import "highlight";

a.disabled {
    color: $gray-600;
    pointer-events: none;
    cursor: default;
}

.list-group-item {
    border-width: 0;
    width: 100%;
}

p small {
    border: 0;
}

.bg-light-grey {
    > div {
        background: rgba(#f7f7f7, 0.9);
        position: relative;
        z-index: 1;
    }
}

// Double class to give this more specifity
.katex.katex { font-size: 1.1em; }

// FIXME ADA do this in a better way?
.nomensa-padding {
    @media (max-width: 767.99px) {
        padding-left: 20px !important;
        padding-right: 20px !important;
    }
    @media (min-width: 768px) {
        padding-left: 100px !important;
        padding-right: 100px !important;
    }
}


body {
    color: $black;
    font-size: 1rem;
    font-family: $primary-font, Arial, 'Helvetica Neue', Helvetica, sans-serif;
    line-height: 1.5rem;
    display: -ms-flexbox;
    -ms-flex-direction: column;
    flex-direction: column;
}

.content-body {
    background-color: rgba($gray-107, 0.4);
}
.pattern-01 {
    background-image: url('/assets/pattern_sm.svg');
    background-position: left top;
    background-repeat: repeat;
    @include respond-above(md) {
        background-image: none;
    }
    > .container {
        @include respond-above(md) {
            background-image: url('/assets/pattern01a.svg');
            background-position: left top;
            background-repeat: repeat-y;
        }
    }
}

.pattern-02 {
    position: relative;

    &:after,
    &:before {
        @include pseudo-element;
        background-image: url('/assets/pattern01.svg');
        background-position: 0 0;
        background-repeat: no-repeat;
        display: none;
        width: 600px;
        height: 600px;
        z-index: 0;
    }

    &:after {
        @include respond-above(sm) {
            display: block;
            right: -9%;
            top: 250px;
        }
    }

    &:before {
        @include respond-above(sm) {
            display: block;
            left: -9%;
            top: 800px;
        }
    }
}

.pattern-03 {
    background-image: url('/assets/pattern04.svg');
    background-position: 0 63%;
    background-repeat: repeat-x;

    @include respond-above(sm) {
        background-image: url('/assets/pattern03.svg');
        background-position: left 0;
        background-repeat: no-repeat;
    }
    @include respond-above(md) {
        background-image: url('/assets/pattern03.svg');
        background-position: left 0;
        background-repeat: no-repeat;
    }
}

.pattern-03-reverse {
    background-image: url('/assets/pattern01.svg');
    background-position: right top;
    background-repeat: repeat-y;

    @include respond-above(sm) {
        background-image: url('/assets/pattern01.svg');
        background-position: right 0;
        background-repeat: no-repeat;
    }
    @include respond-above(md) {
        background-image: url('/assets/pattern01.svg');
        background-position: right 8px;
        background-repeat: no-repeat;
    }
}

.pattern-04 {
    background-image: url('/assets/pattern04.svg');
    background-position: center 164px;
    background-repeat: repeat-x;

    @include respond-above(md) {
        background-image: url('/assets/pattern04a.svg');
        background-position: right 187px;
        background-repeat: no-repeat;
    }
}

.pattern-05 {
    background-image: url('/assets/pattern05.svg');
    background-position: left top;
    background-repeat: repeat-x;
}

.pattern-06 {
    background-image: url('/assets/pattern06.svg');
    background-position: 96.5% 65%;
    background-repeat: no-repeat;
    margin: auto -15px;
    padding: 0 15px;
    @include respond-above(sm) {
        background-position: 96.5% 87%;
        margin: 0;
        padding: 0;
    }
}
.pattern-06-inverted {
    background-image: url('/assets/pattern06-inverted.svg');
    background-position: 96.5% bottom;
    background-repeat: no-repeat;
}
.pattern-07 {
    background-image: url('/assets/pattern06.svg');
    background-position: 0 24px;
    background-repeat: no-repeat;
    margin: auto -15px;
    padding: 0 15px;
    @include respond-above(sm) {
        background-position: 0.3rem 1.6rem;
        margin: 0;
        padding: 0;
    }
}
.pattern-08 {
    @include respond-above(md) {
        background-image: url('/assets/pattern04a.svg');
        background-position: right 39px;
        background-repeat: no-repeat;
    }
}

.isaac-spinner-sm {
    width: 1.5rem;
    height: auto;
    border-width: 2rem;
}

.isaac-spinner-md {
    width: 2.5rem;
    height: auto;
    border-width: 3rem;
}

.isaac-spinner-lg {
    width: 3.5rem;
    height: auto;
    border-width: 4.5rem;
}
