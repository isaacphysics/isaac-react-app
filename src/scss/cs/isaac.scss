// Ada brand and visual identity colours (see Brand Book)
// Stage colours - OLD
// $gcse-colour: #C40E50;
// $gcse-colour-50: #E186A7;
// $gcse-colour-25: #F0C3D3;
// $all-stages-colour: #9148BC;
// $all-stages-colour-50: #C8A3DD;
// $all-stages-colour-25: #E3D1EE;
// $a-level-colour: #2146AD;
// $a-level-colour-50: #90A2D6;
// $a-level-colour-25: #C7D1EA;

// Greyscale
$cs-black: #000000;
$cs-jet: #333333;
$cs-dark-silver: #B9B9B9;
$cs-silver: #C2C2C2;
$cs-light-gray: #D6D6D6;
$cs-list-outline-gray: #EBEBEB;
$cs-cultured: #F5F5F5;
$cs-white: #ffffff;

// Dark pinks
$highlight-dark-pink: #510937;
$highlight-dark-pink-a: #6C0A48;
$cs-dark-pink: #870C5A; // theme colour
$highlight-dark-pink-50: #9E2372;
$highlight-dark-pink-b: #D94BAA; // black text this and below
$highlight-dark-pink-25: #F07DD2;
$highlight-dark-pink-c: #FFD2F0;

// Pinks
$highlight-pink: #A8007A;
$highlight-pink-a: #E11EA2; // black text this and below
$cs-pink: #FF4DC9; // theme colour
$highlight-pink-50: #FF73DC;
$highlight-pink-b: #FFA0F2;
$highlight-pink-25: #FFC4FA;
$highlight-pink-c: #FFF0FF;

// Cyans - all black text
$highlight-cyan: #00A8A6;
$highlight-cyan-a: #00D2C0;
$cs-turquoise-blue: #05FFE7; // theme colour
$highlight-cyan-50: #8CFFFA;
$highlight-cyan-b: #AFFFFF;
$highlight-cyan-25: #D0FFFF;
$highlight-cyan-c: #EBFFFF;

// Yellows - all black text
$highlight-yellow: #DCAA3C;
$highlight-yellow-a: #F5C254;
$cs-yellow: #FFE672; // theme colour
$highlight-yellow-50: #FFF596;
$highlight-yellow-b: #FFFAC3;
$highlight-yellow-25: #FFFFE6;
$highlight-yellow-c: #FFFFF5;

//Text Colour
$highlight-text-light: $cs-white;
$highlight-text-dark: $cs-black;

// Content highlight classes
.hi-dark-pink {
    background-color: $highlight-dark-pink;
    color: $highlight-text-light;
}
.hi-dark-pink-50 {
    background-color: $highlight-dark-pink-50;
    color: $highlight-text-light;
}
.hi-dark-pink-25 {
    background-color: $highlight-dark-pink-50;
    color: $highlight-text-dark;
}
.hi-cyan {
    background-color: $highlight-cyan;
    color: $highlight-text-dark;
}
.hi-cyan-50 {
    background-color: $highlight-cyan-50;
    color: $highlight-text-dark;
}
.hi-cyan-25 {
    background-color: $highlight-cyan-25;
    color: $highlight-text-dark;
}
.hi-pink {
    background-color: $highlight-pink;
    color: $highlight-text-light;
}
.hi-pink-50 {
    background-color: $highlight-pink-50;
    color: $highlight-text-dark;
}
.hi-pink-25 {
    background-color: $highlight-pink-25;
    color: $highlight-text-dark;
}
.hi-yellow {
    background-color: $highlight-yellow;
    color: $highlight-text-dark;
}
.hi-yellow-50 {
    background-color: $highlight-yellow-50;
    color: $highlight-text-dark;
}
.hi-yellow-25 {
    background-color: $highlight-yellow-25;
    color: $highlight-text-dark;
}

// Theme
$theme-colors: ( // Special Bootstrap variable that is used to generate colour classes (e.g. text-pink)
    // Primary and secondary are the same - we use other properties (outline) to distinguish primary/secondary buttons
    "primary": $cs-dark-pink,
    "secondary": $cs-dark-pink,
    "dark-primary": $cs-pink,
    "dark-secondary": $cs-pink,

    "turquoise-blue": $cs-turquoise-blue,
    "pink" : $cs-pink,
    "dark-pink" : $cs-dark-pink,
    "yellow" : $cs-yellow,
    "jet-grey" : $cs-jet,
    "silver-grey" : $cs-silver,
    "light-grey" : $cs-light-gray,
    "cultured-grey" : $cs-cultured,
);
$spacer: 1rem !default;
$spacers: ( // Special Bootstrap variable that is used to generate spacing classes (e.g. pd-md-6)
    6: ($spacer * 6.25) // 100px-ish
);
$grid-breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    nav: 1256px,
    xxl: 1400px
);

// fonts
$primary-font: "poppins-regular", sans-serif;
$secondary-font: 'poppins-regular', sans-serif;
$secondary-font-bold: 'poppins-bold', sans-serif;
$secondary-font-semi-bold: 'poppins-semibold', sans-serif;
$secondary-font-italic: 'poppins-italic', sans-serif;
$secondary-font-medium: $secondary-font;
$tertiary-font: 'poppins-light', sans-serif;

$text-muted: $cs-dark-silver;


// Colour Overrides
// FIXME ADA: I don't think overriding base Bootstrap colour definitions is the right way to go about this.
//  These are shared with and redefined by Physics.
$purple: $cs-dark-pink; // Something to do with links

// Stage colours
// Used for staged accordion sections - we currently do not distinguish by colours
$gcse-colour: $cs-yellow;
$all-stages-colour: $cs-yellow;
$a-level-colour: $cs-yellow;

// Button/input colours
$light-hover-dark-pink: $highlight-dark-pink-a;
$light-active-dark-pink: $highlight-dark-pink;
$dark-hover-pink: $highlight-pink-a;
$dark-active-pink: $highlight-pink;
$focus-blue: $highlight-cyan-a; // focus indicator colour

// Greys - All used in various places, mainly for borders
$gray-103: $cs-cultured;
$gray-107: $cs-list-outline-gray;
$gray-110: $cs-light-gray;
$gray-118: $cs-light-gray;
$gray-120: $cs-silver;
$gray-136: $cs-dark-silver;
$gray-160: #666; // FIXME ADA no palette replacement for this one that is close enough
$gray-194: $cs-jet;

$gray-blue: #636c73; // FIXME ADA we don't use breadcrumbs yet

// Shadows
$shadow-08: rgba(0, 0, 0, 0.08); // Used in various places
$shadow-25: rgba(0, 0, 0, 0.25); // Used by forms
$shadow-3: rgba(0, 0, 0, 0.3); // Used by buttons
$shadow-black: rgb(0, 0, 0); // Used by buttons

// ISAAC
// Node module imports
@import "~bootstrap/scss/bootstrap";
@import "~katex/dist/katex.min.css";
@import "~bootstrap-block-grid/dist/bootstrap4-block-grid.min.css";
@import "~billboard.js/dist/theme/insight.css";
@import "~highlight.js/styles/a11y-light.css";
@import "~leaflet/dist/leaflet.css";

@import "../common/isaac";

// Utility
@import "preload";
@import "../common/mixins";
@import "../common/animations";

// Atoms
@import "fonts";
@import "typography";
@import "../common/modals";
@import "questions";
@import "forms";
@import "../common/elements";
@import "breadcrumbs";
@import "../common/media";
@import "table";
@import "tabs";
@import "../common/accordions";
@import "cards";
@import "list-groups";
@import "inequality-modal";
@import "../common/carousel";
@import "icons";
@import "boards";
@import "../common/focus";
@import "progress-bar";
@import "../common/anvil";
@import "../common/filter";
@import "../common/reservation-modal";
@import "../common/fasttrack";
@import "../common/scroll";
@import "button";
@import "logo";
@import "featured-profile";
@import "../common/code";

// Navigation
@import "header";
@import "search";
@import "../common/navigation-bar";
@import "footer";

// Pages
@import "pages";
@import "homepage";
@import "login";
@import "../common/registration";
@import "../common/assignments";
@import "my-account";
@import "../common/topic";
@import "../common/my-progress";
@import "../common/gameboard";
@import "assignment-progress";
@import "../common/books";
@import "../common/groups";
@import "../common/events";
@import "../common/glossary";
@import "../common/quiz";
@import "accordions";
@import "../common/callout";

@import "parsons-layout";

// Print
@import "../common/print";

// Difficulty icons
@import "filter";

a.disabled {
    color: $gray-600;
    pointer-events: none;
    cursor: default;
}

.list-group-item {
    border-width: 0;
    width: 100%;
}

p small {
    border: 0;
}

.bg-light-grey {
    > div {
        background: $cs-cultured;
        position: relative;
        z-index: 1;
    }
}

// Double class to give this more specificity
.katex.katex { font-size: 1.1em; }

// FIXME ADA do this in a better way?
.nomensa-padding {
    @media (max-width: 767.99px) {
        padding-left: 20px !important;
        padding-right: 20px !important;
    }
    @media (min-width: 768px) {
        padding-left: 100px !important;
        padding-right: 100px !important;
    }
}


body {
    color: $black;
    display: -ms-flexbox;
    -ms-flex-direction: column;
    flex-direction: column;
}

.content-body {
    background-color: $cs-cultured;
}
.pattern-01 {
    background-image: url('/assets/pattern_sm.svg');
    background-position: left top;
    background-repeat: repeat;
    @include respond-above(md) {
        background-image: none;
    }
    > .container {
        @include respond-above(md) {
            background-image: url('/assets/pattern01a.svg');
            background-position: left top;
            background-repeat: repeat-y;
        }
    }
}

.pattern-02 {
    position: relative;

    &:after,
    &:before {
        @include pseudo-element;
        background-image: url('/assets/pattern01.svg');
        background-position: 0 0;
        background-repeat: no-repeat;
        display: none;
        width: 600px;
        height: 600px;
        z-index: 0;
    }

    &:after {
        @include respond-above(sm) {
            display: block;
            right: -9%;
            top: 250px;
        }
    }

    &:before {
        @include respond-above(sm) {
            display: block;
            left: -9%;
            top: 800px;
        }
    }
}

.pattern-03 {
    background-image: url('/assets/pattern04.svg');
    background-position: 0 63%;
    background-repeat: repeat-x;

    @include respond-above(sm) {
        background-image: url('/assets/pattern03.svg');
        background-position: left 0;
        background-repeat: no-repeat;
    }
    @include respond-above(md) {
        background-image: url('/assets/pattern03.svg');
        background-position: left 0;
        background-repeat: no-repeat;
    }
}

.pattern-03-reverse {
    background-image: url('/assets/pattern01.svg');
    background-position: right top;
    background-repeat: repeat-y;

    @include respond-above(sm) {
        background-image: url('/assets/pattern01.svg');
        background-position: right 0;
        background-repeat: no-repeat;
    }
    @include respond-above(md) {
        background-image: url('/assets/pattern01.svg');
        background-position: right 8px;
        background-repeat: no-repeat;
    }
}

.pattern-04 {
    background-image: url('/assets/pattern04.svg');
    background-position: center 164px;
    background-repeat: repeat-x;

    @include respond-above(md) {
        background-image: url('/assets/pattern04a.svg');
        background-position: right 187px;
        background-repeat: no-repeat;
    }
}

.pattern-05 {
    background-image: url('/assets/pattern05.svg');
    background-position: left top;
    background-repeat: repeat-x;
}

.pattern-06 {
    background-image: url('/assets/pattern06.svg');
    background-position: 96.5% 65%;
    background-repeat: no-repeat;
    margin: auto -15px;
    padding: 0 15px;
    @include respond-above(sm) {
        background-position: 96.5% 87%;
        margin: 0;
        padding: 0;
    }
}
.pattern-06-inverted {
    background-image: url('/assets/pattern06-inverted.svg');
    background-position: 96.5% bottom;
    background-repeat: no-repeat;
}
.pattern-07 {
    background-image: url('/assets/pattern06.svg');
    background-position: 0 24px;
    background-repeat: no-repeat;
    margin: auto -15px;
    padding: 0 15px;
    @include respond-above(sm) {
        background-position: 0.3rem 1.6rem;
        margin: 0;
        padding: 0;
    }
}
.pattern-08 {
    @include respond-above(md) {
        background-image: url('/assets/pattern04a.svg');
        background-position: right 39px;
        background-repeat: no-repeat;
    }
}

.isaac-spinner-sm {
    width: 1.5rem;
    height: auto;
    border-width: 2rem;
}

.isaac-spinner-md {
    width: 2.5rem;
    height: auto;
    border-width: 3rem;
}

.isaac-spinner-lg {
    width: 3.5rem;
    height: auto;
    border-width: 4.5rem;
}
