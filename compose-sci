#!/bin/bash

# FIXME: TEMPORARY deployment script for sci whilst it shares phy databases!

# Fail on error, so this script can be chained safely:
set -e

# Need at least three args and the first argument to be the environment:
if [ $# -lt 3 ] || ! { [ $1 = "dev" ] || [ $1 = "staging" ] || [ $1 = "test" ]; } ; then
  echo "Usage: ./compose-sci [staging|dev|test] [APP_VERSION] [DOCKER_ARGS]..."
  exit 1
fi

DOCKER_REPO=ghcr.io/isaacphysics

# Extract args:
ENV=$1
APP_VERSION=$2
# We're done with the first two args. The remainder will be passed to docker compose:
shift 2


# Use the app image to find the correct API version to use:
if [ $1 = "create" ] || [ $1 = "pull" ] || [ $1 = "push" ] || [ $1 = "run" ] || [ $1 = "start" ] || [ $1 = "up" ]; then
  # This will cause new containers or should update containers, so pull newer images if possible:
  docker pull $DOCKER_REPO/isaac-phy-app:$APP_VERSION
  API_VERSION=$(docker inspect -f '{{.Config.Labels.apiVersion}}' $DOCKER_REPO/isaac-phy-app:$APP_VERSION)
  docker pull $DOCKER_REPO/isaac-api:$API_VERSION

elif [ $1 = "down" ] || [ $1 = "stop" ] || [ $1 = "restart" ] || [ $1 = "exec" ] || [ $1 = "config" ] || [ $1 = "logs" ] || [ $1 = "kill" ] || [ $1 = "ps" ]; then
  # This affects existing containers, so don't pull newer images:
  API_VERSION=$(docker inspect -f '{{.Config.Labels.apiVersion}}' $DOCKER_REPO/isaac-phy-app:$APP_VERSION)

else
  # This might not be a docker compose operation. If it is, it could be added above to the correct branch.
  echo "Error: Unsupported docker compose operation '$1'!"
  exit 1
fi

# Ensure we actually _have_ an API_VERSION before we continue, though the "set -e" might avoid this:
if [ -z $API_VERSION ]; then
  echo "Error: Cannot extract API version from APP image!"
  exit 1
fi

API_NAME=sci-api-$ENV-$API_VERSION
APP_NAME=sci-app-$ENV-$APP_VERSION
PG_CONTAINER_NAME=phy-pg-$ENV
ES_CONTAINER_NAME=phy-elasticsearch-live
CONTENT_REPO="rutherford-content"

docker compose -p dc-${APP_NAME//./-} -f - $@ << EOF
services:
  $APP_NAME:
    container_name: $APP_NAME
    image: $DOCKER_REPO/isaac-phy-app:$APP_VERSION
    restart: "no"
    networks:
      default:
        aliases:
          - sci-app-$ENV
  $API_NAME:
    container_name: $API_NAME
    image: $DOCKER_REPO/isaac-api:$API_VERSION
    restart: "no"
    extra_hosts:
      - local-smtp:$LOCAL_SMTP
    external_links:
      - $ES_CONTAINER_NAME:elasticsearch
      - $PG_CONTAINER_NAME:postgres
    environment:
      - SEGUE_CONFIG_LOCATION=/local/data/config/segue-config.dec.yaml
      - JAVA_OPTIONS=-Dlog.path=/isaac-logs -Dsegue.version=$API_VERSION
    volumes:
      - /local/data/m2:/root/.m2:rw
      - /local/data/isaac-sops-config-decrypted/$ENV/sci:/local/data/config:ro
      - /local/data/$CONTENT_REPO:/local/data/$CONTENT_REPO:rw
      - /local/data/maxmind-geolocation/geolite2-city.mmdb:/local/data/geolite2-city.mmdb:ro
      - /var/log/isaac/sci-$ENV:/isaac-logs:rw
    networks:
      default:
        aliases:
          - sci-api-$ENV-any
    logging:
      driver: journald
      options:
        tag: sci-isaac-api-$ENV
networks:
  default:
    name: isaac
    external: true
EOF

exit 0
