
user  nginx;
worker_processes  auto;

error_log  /dev/stdout error;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '[$time_local] $status "$http_x_forwarded_for" "$request"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # Do not use etags for caching:
    etag off;
    # Last-Modified is always added anyway.

    # Configure User-Agents considered unsupported:
    map $http_user_agent $unsupported_browser {
        default                                 0;
        # Consider IE11 and older unsupported:
        "~Trident/"                             1;
        # Consider Safari <= 14 as unsupported:
        "~Mac OS.*AppleWebKit.*Version/[0-9]\..*Safari" 1;
        "~Mac OS.*AppleWebKit.*Version/1[0123]\..*Safari" 1;
    }

    server {
        listen       80;
        server_name  localhost;

        error_log /var/log/nginx/error.log;

        root /usr/share/nginx/html;

        location /assets {
            # Strongly cache these things for at least 30 days:
            add_header Cache-Control "public, max-age=2592000, no-transform";
            try_files $uri @default;
        }

        location /static {
            # Maybe also strongly cache these things for at least 30 days?
            add_header Cache-Control "public, max-age=2592000, no-transform";
            try_files $uri @default;
        }

        location /index.html {
            # Index pages, and also serves unknown URLs too from @default.
            # Do not allow caching of these index pages at all:
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            try_files $uri @default;
        }

        location ~ ^/unsupported_browser.(html|js)$ {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                try_files $uri @default;
        }

        location / {
            # Everything else.
            if ($unsupported_browser) {
                rewrite .* /unsupported_browser.html;
            }
            # Allow caching, but require revalidation every time:
            add_header Cache-Control "no-cache, must-revalidate";
            try_files $uri @default;
        }

        location @default {
            # Unknown files not found by any of the try_files above.
            # No headers can be added in this block, since they won't be used.
            # Rewrite all unknown requests to the relevant index page:
            rewrite .* /index.html last;
        }
    }
}
